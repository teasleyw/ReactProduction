{"ast":null,"code":"var _jsxFileName = \"/Users/plasmalazer/PycharmProjects/Portfolio/Frontend/src/Pages/Testing/Testing.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { NeonBtn, SandboxPage } from './TestingStyles.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Testing() {\n  _s();\n\n  const [neonBtnClicked, setNeonBtnClicked] = useState(false);\n  const [neonBtnVisible, setNeonBtnVisible] = useState(false);\n  const [click, setClick] = useState(false); // const [button, setButton] = useState(true);\n\n  const handleClick = () => setClick(!click);\n\n  const setNeonBtnVisibles = () => setClick(false); // const showButton = () => {\n  //     if (window.innerWidth <= 960) {\n  //     setButton(false);\n  //     } else {\n  //     setButton(true);\n  //     }\n  // };\n  // useEffect(() => {\n  //     showButton();\n  // }, []);\n  // window.addEventListener('resize', showButton);\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SandboxPage, {\n      children: neonBtnVisible ? /*#__PURE__*/_jsxDEV(NeonBtn, {\n        NeonColor: \"yellow\",\n        onClick: setNeonBtnVisibles,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Fuck me?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(NeonBtn, {\n        NeonColor: \"yellow\",\n        onClick: setNeonBtnVisibles(true),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Fuck You?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(Testing, \"LIjliEC7fTtE4DLNn/Wm5aQYwXo=\");\n\n_c = Testing;\nexport default Testing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Testing\");","map":{"version":3,"sources":["/Users/plasmalazer/PycharmProjects/Portfolio/Frontend/src/Pages/Testing/Testing.jsx"],"names":["React","useState","useEffect","NeonBtn","SandboxPage","Testing","neonBtnClicked","setNeonBtnClicked","neonBtnVisible","setNeonBtnVisible","click","setClick","handleClick","setNeonBtnVisibles"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACIC,OADJ,EAEIC,WAFJ,QAGS,qBAHT;;;;AAIA,SAASC,OAAT,GAAmB;AAAA;;AACnB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCN,QAAQ,CAAC,KAAD,CAApD;AACA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,KAAD,CAApD;AAEA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,KAAD,CAAlC,CAJmB,CAKnB;;AAEA,QAAMW,WAAW,GAAG,MAAMD,QAAQ,CAAC,CAACD,KAAF,CAAlC;;AACA,QAAMG,kBAAkB,GAAG,MAAMF,QAAQ,CAAC,KAAD,CAAzC,CARmB,CAWnB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;AAEA,sBACI;AAAA,2BACA,QAAC,WAAD;AAAA,gBACKH,cAAc,gBACX,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC,QAAnB;AAA4B,QAAA,OAAO,EAAEK,kBAArC;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADW,gBAKf,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC,QAAnB;AAA4B,QAAA,OAAO,EAAEA,kBAAkB,CAAC,IAAD,CAAvD;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAcC;;GAvCQR,O;;KAAAA,O;AAwCT,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n    NeonBtn,\n    SandboxPage\n  } from './TestingStyles.jsx';\nfunction Testing() {\nconst [neonBtnClicked, setNeonBtnClicked] = useState(false)\nconst [neonBtnVisible, setNeonBtnVisible] = useState(false)\n\nconst [click, setClick] = useState(false);\n// const [button, setButton] = useState(true);\n\nconst handleClick = () => setClick(!click);\nconst setNeonBtnVisibles = () => setClick(false);\n\n\n// const showButton = () => {\n//     if (window.innerWidth <= 960) {\n//     setButton(false);\n//     } else {\n//     setButton(true);\n//     }\n// };\n\n// useEffect(() => {\n//     showButton();\n// }, []);\n\n// window.addEventListener('resize', showButton);\n\nreturn (\n    <>\n    <SandboxPage>\n        {neonBtnVisible ? (\n            <NeonBtn NeonColor=\"yellow\" onClick={setNeonBtnVisibles}>\n                <span>Fuck me?</span>\n            </NeonBtn>\n        ) : (\n        <NeonBtn NeonColor=\"yellow\" onClick={setNeonBtnVisibles(true)}>\n            <span>Fuck You?</span>\n        </NeonBtn>) }\n    </SandboxPage>\n    </>\n);\n}\nexport default Testing;"]},"metadata":{},"sourceType":"module"}