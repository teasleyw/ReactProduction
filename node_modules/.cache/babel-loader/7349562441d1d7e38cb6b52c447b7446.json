{"ast":null,"code":"var _jsxFileName = \"/Users/plasmalazer/PycharmProjects/React/src/Components/Testing/Testing.jsx\";\nimport \"./Testing.css\";\nimport { CheckCircle, DoNotDisturb } from \"@mui/icons-material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Testing() {\n  const initialValues = {\n    Application_Title: ''\n  };\n  const SoftwareSDK = [{\n    name: 'UbuntuLinux',\n    TestStatus: 1\n  }, {\n    name: 'Pony',\n    TestStatus: 0\n  }];\n\n  const Softwares = () => {\n    const myMap = [];\n    const tables = SoftwareSDK.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"soft\",\n        children: [s.name, /*#__PURE__*/_jsxDEV(DoNotDisturb, {\n          className: \"StatusIcon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)\n    }, s.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 18\n    }, this));\n\n    for (const object in SoftwareSDK) {\n      //console.log(SoftwareSDK[object])\n      for (const value in SoftwareSDK[object]) {\n        console.log(SoftwareSDK[object][value]);\n\n        if (value === 'name') {\n          var SoftwareName = SoftwareSDK[object][value];\n        } else {\n          var Status = SoftwareSDK[object][value];\n        }\n      }\n\n      if (Status === 0) {\n        myMap.push( /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"soft\",\n            children: [SoftwareName, /*#__PURE__*/_jsxDEV(DoNotDisturb, {\n              className: \"StatusIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this)\n        }, SoftwareName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 24\n        }, this));\n      } else {\n        myMap.push( /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"soft\",\n            children: [SoftwareName, /*#__PURE__*/_jsxDEV(CheckCircle, {\n              className: \"StatusIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this)\n        }, SoftwareName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 24\n        }, this));\n      }\n    }\n\n    return myMap;\n  };\n\n  const SoftwareList = () => /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"SoftwareListCSS\",\n    children: /*#__PURE__*/_jsxDEV(Softwares, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"testing\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Application_Software\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"Application\",\n          children: \"Project Figure what to put on the bottom of my hayride jug\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Software\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"soft\",\n            children: \"Software\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(SoftwareList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 4\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_c = Testing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Testing\");","map":{"version":3,"sources":["/Users/plasmalazer/PycharmProjects/React/src/Components/Testing/Testing.jsx"],"names":["CheckCircle","DoNotDisturb","Testing","initialValues","Application_Title","SoftwareSDK","name","TestStatus","Softwares","myMap","tables","map","s","object","value","console","log","SoftwareName","Status","push","SoftwareList"],"mappings":"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","sourcesContent":["import \"./Testing.css\";\nimport {\n  CheckCircle,\n  DoNotDisturb\n} from \"@mui/icons-material\";\nexport default function Testing() {\nconst initialValues = {\n\tApplication_Title: ''\n}\nconst SoftwareSDK = [\n    {\n        name: 'UbuntuLinux',\n        TestStatus: 1 ,\n    },\n    {\n        name: 'Pony',\n        TestStatus: 0,\n    },\n];\nconst Softwares = () => {\n    const myMap = []\n    const tables = SoftwareSDK.map(s => (\n                 <li key={s.name}>\n                    <h2 className=\"soft\">{s.name}\n                        <DoNotDisturb className=\"StatusIcon\">\n                        </DoNotDisturb>\n                    </h2>\n                </li>\n\n            ));\n\n    for(const object in SoftwareSDK) {\n        //console.log(SoftwareSDK[object])\n        for(const value in SoftwareSDK[object]){\n            console.log(SoftwareSDK[object][value])\n            if(value === 'name'){\n                var SoftwareName = SoftwareSDK[object][value]\n            }\n            else{\n                var Status = SoftwareSDK[object][value]\n            }\n        }\n        if ( Status === 0){\n            myMap.push(<li key={SoftwareName}>\n                    <h2 className=\"soft\">{SoftwareName}\n                        <DoNotDisturb className=\"StatusIcon\">\n                        </DoNotDisturb>\n                    </h2>\n                </li>\n                )\n        }\n        else{\n            myMap.push(<li key={SoftwareName}>\n                    <h2 className=\"soft\">{SoftwareName}\n                        <CheckCircle className=\"StatusIcon\">\n                        </CheckCircle>\n                    </h2>\n                </li>\n                )\n        }\n    }\n    return myMap\n}\nconst SoftwareList = () => (\n    <ul className=\"SoftwareListCSS\">\n        <Softwares/>\n    </ul>\n);\n\n\n  return (\n    <div className=\"testing\">\n       <>\n\t\t\t<div className=\"Application_Software\">\n\t\t\t    <h1 className=\"Application\">Project Figure what to put on the bottom of my hayride jug</h1>\n\t\t\t    <div className=\"Software\">\n                    <h2 className=\"soft\">Software\n                    </h2>\n                    <SoftwareList/>\n                </div>\n\n\t\t\t</div>\n\t    </>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}