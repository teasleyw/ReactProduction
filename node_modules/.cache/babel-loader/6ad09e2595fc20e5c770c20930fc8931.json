{"ast":null,"code":"import React from 'react';\nimport \"./Timeline.css\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\"use strict\";\n\nfunction qs(selector, all = false) {\n  return all ? document.querySelectorAll(selector) : document.querySelector(selector);\n}\n\nconst sections = qs('.section', true);\nconst timeline = qs('.timeline');\nconst line = qs('.line');\nline.style.bottom = `calc(100% - 20px)`;\nlet prevScrollY = window.scrollY;\nlet up, down;\nlet full = false;\nlet set = 0;\nconst targetY = window.innerHeight * .8;\n\nfunction scrollHandler(e) {\n  const {\n    scrollY\n  } = window;\n  up = scrollY < prevScrollY;\n  down = !up;\n  const timelineRect = timeline.getBoundingClientRect();\n  const lineRect = line.getBoundingClientRect(); // const lineHeight = lineRect.bottom - lineRect.top;\n\n  const dist = targetY - timelineRect.top;\n  console.log(dist);\n\n  if (down && !full) {\n    set = Math.max(set, dist);\n    line.style.bottom = `calc(100% - ${set}px)`;\n  }\n\n  if (dist > timeline.offsetHeight + 50 && !full) {\n    full = true;\n    line.style.bottom = `-50px`;\n  }\n\n  sections.forEach(item => {\n    // console.log(item);\n    const rect = item.getBoundingClientRect(); //     console.log(rect);\n\n    if (rect.top + item.offsetHeight / 5 < targetY) {\n      item.classList.add('show-me');\n    }\n  }); // console.log(up, down);\n\n  prevScrollY = window.scrollY;\n}\n\nscrollHandler();\nline.style.display = 'block';\nwindow.addEventListener('scroll', scrollHandler);\nexport default function Timeline() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_c = Timeline;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"sources":["/Users/plasmalazer/PycharmProjects/Portfolio/Frontend/src/Pages/Timeline/Timeline.jsx"],"names":["React","qs","selector","all","document","querySelectorAll","querySelector","sections","timeline","line","style","bottom","prevScrollY","window","scrollY","up","down","full","set","targetY","innerHeight","scrollHandler","e","timelineRect","getBoundingClientRect","lineRect","dist","top","console","log","Math","max","offsetHeight","forEach","item","rect","classList","add","display","addEventListener","Timeline"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;;;AACA;;AAEA,SAASC,EAAT,CAAYC,QAAZ,EAAsBC,GAAG,GAAG,KAA5B,EAAmC;AACjC,SAAOA,GAAG,GAAGC,QAAQ,CAACC,gBAAT,CAA0BH,QAA1B,CAAH,GAAyCE,QAAQ,CAACE,aAAT,CAAuBJ,QAAvB,CAAnD;AACD;;AAED,MAAMK,QAAQ,GAAGN,EAAE,CAAC,UAAD,EAAa,IAAb,CAAnB;AACA,MAAMO,QAAQ,GAAGP,EAAE,CAAC,WAAD,CAAnB;AACA,MAAMQ,IAAI,GAAGR,EAAE,CAAC,OAAD,CAAf;AACAQ,IAAI,CAACC,KAAL,CAAWC,MAAX,GAAqB,mBAArB;AACA,IAAIC,WAAW,GAAGC,MAAM,CAACC,OAAzB;AACA,IAAIC,EAAJ,EAAQC,IAAR;AACA,IAAIC,IAAI,GAAG,KAAX;AACA,IAAIC,GAAG,GAAG,CAAV;AACA,MAAMC,OAAO,GAAGN,MAAM,CAACO,WAAP,GAAqB,EAArC;;AAEA,SAASC,aAAT,CAAuBC,CAAvB,EAA0B;AACxB,QAAM;AACJR,IAAAA;AADI,MAEFD,MAFJ;AAGAE,EAAAA,EAAE,GAAGD,OAAO,GAAGF,WAAf;AACAI,EAAAA,IAAI,GAAG,CAACD,EAAR;AACA,QAAMQ,YAAY,GAAGf,QAAQ,CAACgB,qBAAT,EAArB;AACA,QAAMC,QAAQ,GAAGhB,IAAI,CAACe,qBAAL,EAAjB,CAPwB,CAOuB;;AAE/C,QAAME,IAAI,GAAGP,OAAO,GAAGI,YAAY,CAACI,GAApC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AAEA,MAAIV,IAAI,IAAI,CAACC,IAAb,EAAmB;AACjBC,IAAAA,GAAG,GAAGY,IAAI,CAACC,GAAL,CAASb,GAAT,EAAcQ,IAAd,CAAN;AACAjB,IAAAA,IAAI,CAACC,KAAL,CAAWC,MAAX,GAAqB,eAAcO,GAAI,KAAvC;AACD;;AAED,MAAIQ,IAAI,GAAGlB,QAAQ,CAACwB,YAAT,GAAwB,EAA/B,IAAqC,CAACf,IAA1C,EAAgD;AAC9CA,IAAAA,IAAI,GAAG,IAAP;AACAR,IAAAA,IAAI,CAACC,KAAL,CAAWC,MAAX,GAAqB,OAArB;AACD;;AAEDJ,EAAAA,QAAQ,CAAC0B,OAAT,CAAiBC,IAAI,IAAI;AACvB;AACA,UAAMC,IAAI,GAAGD,IAAI,CAACV,qBAAL,EAAb,CAFuB,CAEoB;;AAE3C,QAAIW,IAAI,CAACR,GAAL,GAAWO,IAAI,CAACF,YAAL,GAAoB,CAA/B,GAAmCb,OAAvC,EAAgD;AAC9Ce,MAAAA,IAAI,CAACE,SAAL,CAAeC,GAAf,CAAmB,SAAnB;AACD;AACF,GAPD,EAtBwB,CA6BpB;;AAEJzB,EAAAA,WAAW,GAAGC,MAAM,CAACC,OAArB;AACD;;AAEDO,aAAa;AACbZ,IAAI,CAACC,KAAL,CAAW4B,OAAX,GAAqB,OAArB;AACAzB,MAAM,CAAC0B,gBAAP,CAAwB,QAAxB,EAAkClB,aAAlC;AAEA,eAAe,SAASmB,QAAT,GAAoB;AAEjC,sBACE,qCADF;AAKD;KAPuBA,Q","sourcesContent":["import React from 'react'\nimport \"./Timeline.css\";\n\"use strict\";\n\nfunction qs(selector, all = false) {\n  return all ? document.querySelectorAll(selector) : document.querySelector(selector);\n}\n\nconst sections = qs('.section', true);\nconst timeline = qs('.timeline');\nconst line = qs('.line');\nline.style.bottom = `calc(100% - 20px)`;\nlet prevScrollY = window.scrollY;\nlet up, down;\nlet full = false;\nlet set = 0;\nconst targetY = window.innerHeight * .8;\n\nfunction scrollHandler(e) {\n  const {\n    scrollY\n  } = window;\n  up = scrollY < prevScrollY;\n  down = !up;\n  const timelineRect = timeline.getBoundingClientRect();\n  const lineRect = line.getBoundingClientRect(); // const lineHeight = lineRect.bottom - lineRect.top;\n\n  const dist = targetY - timelineRect.top;\n  console.log(dist);\n\n  if (down && !full) {\n    set = Math.max(set, dist);\n    line.style.bottom = `calc(100% - ${set}px)`;\n  }\n\n  if (dist > timeline.offsetHeight + 50 && !full) {\n    full = true;\n    line.style.bottom = `-50px`;\n  }\n\n  sections.forEach(item => {\n    // console.log(item);\n    const rect = item.getBoundingClientRect(); //     console.log(rect);\n\n    if (rect.top + item.offsetHeight / 5 < targetY) {\n      item.classList.add('show-me');\n    }\n  }); // console.log(up, down);\n\n  prevScrollY = window.scrollY;\n}\n\nscrollHandler();\nline.style.display = 'block';\nwindow.addEventListener('scroll', scrollHandler);\n\nexport default function Timeline() {\n   \n  return (\n    <>\n    \n    </>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}