{"ast":null,"code":"var _jsxFileName = \"/Users/plasmalazer/PycharmProjects/React/src/Components/Testing/Testing.jsx\";\nimport \"./Testing.css\";\nimport { CheckCircle, DoNotDisturb } from \"@mui/icons-material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Testing() {\n  const initialValues = {\n    Application_Title: ''\n  };\n  const SoftwareSDK = [{\n    name: 'UbuntuLinux',\n    TestStatus: 1\n  }, {\n    name: 'Pony',\n    TestStatus: 0\n  }];\n\n  const software = () => {\n    const tables = 1;\n\n    for (const value in SoftwareSDK) {\n      console.log(value);\n\n      if (value === 'TestStatus') {\n        if (SoftwareSDK[value] === 0) {\n          const tables = SoftwareSDK.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"soft\",\n              children: [s.name, /*#__PURE__*/_jsxDEV(CheckCircle, {\n                className: \"StatusIcon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 21\n            }, this)\n          }, s.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 18\n          }, this));\n        } else if (SoftwareSDK[value] === 1) {\n          const tables = SoftwareSDK.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"soft\",\n              children: [s.name, /*#__PURE__*/_jsxDEV(DoNotDisturb, {\n                className: \"StatusIcon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 21\n            }, this)\n          }, s.name, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 18\n          }, this));\n        }\n      }\n    }\n\n    return tables;\n  };\n\n  const WordList = () => /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"SoftwareList\",\n    children: /*#__PURE__*/_jsxDEV(\"software\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"testing\",\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Application_Software\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"Application\",\n          children: \"Project Figure what to put on the bottom of my hayride jug\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Software\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"soft\",\n            children: [\"Software\", /*#__PURE__*/_jsxDEV(CheckCircle, {\n              className: \"StatusIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(WordList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 4\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_c = Testing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Testing\");","map":{"version":3,"sources":["/Users/plasmalazer/PycharmProjects/React/src/Components/Testing/Testing.jsx"],"names":["CheckCircle","DoNotDisturb","Testing","initialValues","Application_Title","SoftwareSDK","name","TestStatus","software","tables","value","console","log","map","s","WordList"],"mappings":";AAAA,OAAO,eAAP;AACA,SACEA,WADF,EAEEC,YAFF,QAGO,qBAHP;;;AAIA,eAAe,SAASC,OAAT,GAAmB;AAClC,QAAMC,aAAa,GAAG;AACrBC,IAAAA,iBAAiB,EAAE;AADE,GAAtB;AAGA,QAAMC,WAAW,GAAG,CAChB;AACIC,IAAAA,IAAI,EAAE,aADV;AAEIC,IAAAA,UAAU,EAAE;AAFhB,GADgB,EAKhB;AACID,IAAAA,IAAI,EAAE,MADV;AAEIC,IAAAA,UAAU,EAAE;AAFhB,GALgB,CAApB;;AAUA,QAAMC,QAAQ,GAAG,MAAM;AACnB,UAAMC,MAAM,GAAG,CAAf;;AACA,SAAI,MAAMC,KAAV,IAAmBL,WAAnB,EAAgC;AAC5BM,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,UAAGA,KAAK,KAAK,YAAb,EAA0B;AACtB,YAAGL,WAAW,CAACK,KAAD,CAAX,KAAuB,CAA1B,EAA4B;AACxB,gBAAMD,MAAM,GAAGJ,WAAW,CAACQ,GAAZ,CAAgBC,CAAC,iBAC/B;AAAA,mCACG;AAAI,cAAA,SAAS,EAAC,MAAd;AAAA,yBAAsBA,CAAC,CAACR,IAAxB,eACI,QAAC,WAAD;AAAa,gBAAA,SAAS,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADH,aAASQ,CAAC,CAACR,IAAX;AAAA;AAAA;AAAA;AAAA,kBADc,CAAf;AAQH,SATD,MAUK,IAAGD,WAAW,CAACK,KAAD,CAAX,KAAuB,CAA1B,EAA4B;AAC7B,gBAAMD,MAAM,GAAGJ,WAAW,CAACQ,GAAZ,CAAgBC,CAAC,iBAC/B;AAAA,mCACG;AAAI,cAAA,SAAS,EAAC,MAAd;AAAA,yBAAsBA,CAAC,CAACR,IAAxB,eACI,QAAC,YAAD;AAAc,gBAAA,SAAS,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,sBADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADH,aAASQ,CAAC,CAACR,IAAX;AAAA;AAAA;AAAA;AAAA,kBADc,CAAf;AAQH;AACJ;AAEJ;;AACD,WAAOG,MAAP;AACH,GA7BD;;AA8BA,QAAMM,QAAQ,GAAG,mBACb;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;;AAME,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACG;AAAA,6BACJ;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACa;AAAI,YAAA,SAAS,EAAC,MAAd;AAAA,gDACI,QAAC,WAAD;AAAa,cAAA,SAAS,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADb,eAKa,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBALb;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADI;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;KAnEuBb,O","sourcesContent":["import \"./Testing.css\";\nimport {\n  CheckCircle,\n  DoNotDisturb\n} from \"@mui/icons-material\";\nexport default function Testing() {\nconst initialValues = {\n\tApplication_Title: ''\n}\nconst SoftwareSDK = [\n    {\n        name: 'UbuntuLinux',\n        TestStatus: 1 ,\n    },\n    {\n        name: 'Pony',\n        TestStatus: 0,\n    },\n];\nconst software = () => {\n    const tables = 1\n    for(const value in SoftwareSDK) {\n        console.log(value)\n        if(value === 'TestStatus'){\n            if(SoftwareSDK[value] === 0){\n                const tables = SoftwareSDK.map(s => (\n                 <li key={s.name}>\n                    <h2 className=\"soft\">{s.name}\n                        <CheckCircle className=\"StatusIcon\">\n                        </CheckCircle>\n                    </h2>\n                </li>\n            ));\n            }\n            else if(SoftwareSDK[value] === 1){\n                const tables = SoftwareSDK.map(s => (\n                 <li key={s.name}>\n                    <h2 className=\"soft\">{s.name}\n                        <DoNotDisturb className=\"StatusIcon\">\n                        </DoNotDisturb>\n                    </h2>\n                </li>\n            ));\n            }\n        }\n\n    }\n    return tables\n}\nconst WordList = () => (\n    <ul className=\"SoftwareList\">\n        <software/>\n    </ul>\n);\n\n  return (\n    <div className=\"testing\">\n       <>\n\t\t\t<div className=\"Application_Software\">\n\t\t\t    <h3 className=\"Application\">Project Figure what to put on the bottom of my hayride jug</h3>\n\t\t\t    <div className=\"Software\">\n                    <h2 className=\"soft\">Software\n                        <CheckCircle className=\"StatusIcon\">\n                        </CheckCircle>\n                    </h2>\n                    <WordList/>\n                </div>\n\n\t\t\t</div>\n\t    </>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}